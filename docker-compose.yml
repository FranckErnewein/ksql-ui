version: '3.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181 | grep imok"]
      start_period: 30s

  kafka-1:
    image: confluentinc/cp-kafka
    hostname: kafka-1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    healthcheck:
      test: ["CMD", "nc", "127.0.0.1", "9092"]
      start_period: 30s

  kafka-2:
    image: confluentinc/cp-kafka
    hostname: kafka-2
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    healthcheck:
      test: ["CMD", "nc", "127.0.0.1", "9092"]
      start_period: 30s

  kafka-3:
    image: confluentinc/cp-kafka
    hostname: kafka-3
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    healthcheck:
      test: ["CMD", "nc", "127.0.0.1", "9092"]
      start_period: 30s

  schema-registry:
    image: confluentinc/cp-schema-registry
    ports:
      - "8082:8082"
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8082"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9092,PLAINTEXT://kafka-3:9092"

  cors-proxy:
    hostname: cors-proxy
    image: yasinuslu/cors-anywhere
    ports:
      - 4000:80

  connect:
    image: confluentinc/cp-kafka-connect
    ports:
    - 8083:8083
    depends_on:
    - zookeeper
    - kafka-1
    - kafka-2
    - kafka-3
    - schema-registry
    - banking
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      CONNECT_GROUP_ID: "connect"
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_REPLICATION_FACTOR: 2
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
    volumes:
      - ./kafka-connect/postgresql-42.2.8.jre6.jar:/usr/share/java/kafka-connect-jdbc/postgresql-42.2.8.jre6.jar
    healthcheck:
      test: ["CMD", "nc", "127.0.0.1", "8083"]
      start_period: 30s

  banking:
    image: postgres:10
    hostname: banking
    ports:
      - 5432:5432
    volumes:
    - ./dump-banking/:/data/banking 
    - ./postgres-banking/:/var/lib/postgresql
    environment:
      POSTGRES_USER: me
      POSTGRES_PASSWORD: pwd 
      POSTGRES_DB: banking

  ksql:
    image: confluentinc/cp-ksql-server:5.2.1
    hostname: ksql
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka-1:9092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8082
